" Vundle bootstrap - download vundle if it's not there
if !filereadable($HOME . '/.vim/bundle/Vundle.vim/.git/config') && confirm("Clone Vundle?","Y\nn") == 1
    exec '!git clone https://github.com/gmarik/Vundle.vim ~/.vim/bundle/Vundle.vim/'
endif

" ================================================
" Configs for Vundle
" ================================================
set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Themes
Plugin 'NLKNguyen/papercolor-theme'
Plugin 'altercation/vim-colors-solarized'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'yasukotelin/shirotelin'

Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'mileszs/ack.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'terryma/vim-expand-region'
Plugin 'inkarkat/vim-ingo-library'
Plugin 'inkarkat/vim-mark'

"Plugin 'sheerun/vim-polyglot'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'takac/vim-hardtime'

" Python specific
"Plugin 'jeetsukumaran/vim-pythonsense'
Plugin 'kana/vim-textobj-user'
Plugin 'bps/vim-textobj-python'
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'davidhalter/jedi-vim'


call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

" Automatic reloading of .vimrc
autocmd! bufwritepost .vimrc source %
autocmd! bufwritepost vimrc source %

" make backspace behave like normal again
set bs=2     

let mapleader = ","

" Quick quit command
noremap <Leader>q :quit<CR>
noremap <Leader>Q :qa!<CR>

" Easier movement within windows
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h
			
" easier moving between tabs
" map <Leader>n <esc>:tabprevious<CR>
" map <Leader>m <esc>:tabnext<CR>

set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab


" Make search case insensitive
set hlsearch
set incsearch
set ignorecase
set smartcase
" ================================================
" My own configs
" ================================================

" Use `ag` for ack plugin
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" clean the search result by hitting escape
nnoremap <silent> <esc> :noh<cr><esc>

" open vimrc fast!
:nnoremap <leader>ev :vsplit $MYVIMRC<cr>
:nnoremap <leader>sv :source $MYVIMRC<cr>

" Use space for code folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

" Shorter update time (for git gutter)
set updatetime=100

" No docstring window for Jedi
autocmd FileType python setlocal completeopt-=preview

" Use macos clipboard
set clipboard=unnamed

" Disable the welcome message
set shortmess+=I 

" Shortcut to toggle nerdtree
map <f8> :NERDTreeToggle<CR>

" Turn off the annoying bells
set belloff=all

set autoindent
set number
set relativenumber
set nobackup
set laststatus=2
set statusline=%F%m%r%h%w%=(%{&ff}/%Y)\ (line\ %l\/%L,\ col\ %c)\
set wildmenu

" HardTime configs
let g:hardtime_default_on = 0
let g:hardtime_timeout = 1000
let g:hardtime_showmsg = 0


if has('gui_running')
    set background=light
    colorscheme papercolor
    let g:airline_theme='papercolor'
    set guifont=Menlo\ Regular:h12
    set linespace=2
    set cursorline  " highlight current line
else
  "  colorscheme zenburn
end


" Configs for showing invisible chars (tab etc)
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,eol:¬  " Same as TextMate
