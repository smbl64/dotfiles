" Automatic reloading of .vimrc
autocmd! bufwritepost .vimrc source %
autocmd! bufwritepost vimrc source %

" Disable swap files
set noswapfile

" make backspace behave like normal again
set bs=2

let mapleader = " "

" Easier movement within windows
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Tab configs
set tabstop=4
set softtabstop=4
set shiftwidth=4
set shiftround
set expandtab

" Leave a little room on top and bottom of the screen when scrolling
set scrolloff=3

" Allow unsaved buffers to go to background
set hidden

" Use standard regex for searching (via '\V' option)
nnoremap / /\V
vnoremap / /\V

" Search configs
set hlsearch
set incsearch
set ignorecase
set smartcase

set autoindent
set number
set cursorline

set nobackup
set laststatus=2
set wildmenu
set wildmode=longest:full,full

" Have a better :find experience
set path+=**
set wildignore+=*.pyc,*/__pycache__/*

" Open new splits on right or below
set splitbelow
set splitright

" Automatically re-read the file if it's changed
set autoread

" Better timeouts
set ttimeout
set ttimeoutlen=100
set timeoutlen=1000

" netrw configs
let g:netrw_banner=0  " No help banner
let g:netrw_liststyle=3  " tree

" Easily quit buffers
nnoremap <Leader>q :q<cr>

" clean the search result by hitting space
nnoremap <silent> <leader><space> :noh<cr>

" open vimrc fast!
:nnoremap <leader>ev :vsplit $MYVIMRC<cr>
:nnoremap <leader>sv :source $MYVIMRC<cr>

" Use space for code folding
set foldmethod=indent
set foldlevel=99

" Shorter update time (for git gutter)
set updatetime=300

" Use OS clipboard
if has('macunix')
    set clipboard=unnamed
else
    set clipboard=unnamedplus
endif

" Disable the welcome message
set shortmess+=I

" Turn off the annoying bells
set belloff=all

" Permanent undo
set undodir=~/.vim/undo-dir
set undofile

set termguicolors
set background=dark
colorscheme PaperColor

" Configs for showing invisible chars (tab etc)
nmap <leader>l :set list!<CR>
set listchars=tab:▸\ ,eol:¬,space:␣

augroup MyGroup
    autocmd!
    autocmd FocusLost * silent! wa
augroup END

" Expand %% to current directory (in Ex command mode)
cabbr <expr> %% expand('%:p:h')

" Make active window more visible
augroup BgHighlight
    autocmd!
    autocmd WinEnter * set cursorline
    autocmd WinLeave * set nocursorline
augroup END

" Automatically create folders on write if needed
augroup Mkdir
  autocmd!
  autocmd BufWritePre * call mkdir(expand("<afile>:p:h"), "p")
augroup END

" Open a scratch new tab
command! Scratch tabnew | setlocal buftype=nofile | file Scratch

set statusline=
set statusline+=%#CursorIM#%{(mode()=='n')?'\ \ NORMAL\ ':''}
set statusline+=%#Search#%{(mode()=='i')?'\ \ INSERT\ ':''}
set statusline+=%#DiffDelete#%{(mode()=='r')?'\ \ RPLACE\ ':''}
set statusline+=%#Cursor#%{(mode()=='v')?'\ \ VISUAL\ ':''}
set statusline+=%#Visual#                " colour
set statusline+=%{&paste?'\ PASTE\ ':''}
set statusline+=%{&spell?'\ SPELL\ ':''}
set statusline+=%#CursorIM#              " colour
set statusline+=%R                       " readonly flag
set statusline+=%M                       " modified [+] flag
set statusline+=%#CursorLine#            " colour
set statusline+=\ %f\                    " short file name
set statusline+=%=                       " right align
set statusline+=%#CursorLine#            " colour
set statusline+=\ %y\                    " file type
set statusline+=%#CursorIM#              " colour
set statusline+=\ %3l:%-2c\              " line + column
set statusline+=%#CursorIM#              " colour
set statusline+=\ %3p%%\                 " percentage


" Check for local vimrc
let local_vimrc = expand('~/.vimrc_local')

if filereadable(local_vimrc)
    exec 'source' local_vimrc
endif
